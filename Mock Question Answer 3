Q1.
class Stack:
    def __init__(self):
        self.stack = []

    def push(self, item):
        self.stack.append(item)

    def pop(self):
        if self.is_empty():
            return "Stack is empty"
        return self.stack.pop()

    def is_empty(self):
        return len(self.stack) == 0

my_stack = Stack()

my_stack.push(10)
my_stack.push(20)
my_stack.push(30)

print(my_stack.pop()) 
print(my_stack.pop())
print(my_stack.is_empty())
print(my_stack.pop())
print(my_stack.is_empty())

Q2.
class Queue:
    def __init__(self):
        self.queue = []

    def enqueue(self, item):
        self.queue.append(item)

    def dequeue(self):
        if self.is_empty():
            return "Queue is empty"
        return self.queue.pop(0)

    def is_empty(self):
        return len(self.queue) == 0
my_queue = Queue()

my_queue.enqueue(10)
my_queue.enqueue(20)
my_queue.enqueue(30)

print(my_queue.dequeue()) 
print(my_queue.dequeue())
print(my_queue.is_empty())
print(my_queue.dequeue())
print(my_queue.is_empty())

